<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ParamerusStudio"
                    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
                    xmlns:pmbus="clr-namespace:ParamerusStudio.PMBus"
                    xmlns:components="clr-namespace:ParamerusStudio.Components">
    
    <!--#region Static resources-->
    <!--#region Colors -->
    <SolidColorBrush x:Key="Paramerus.MainColor" Color="#FFC20000"/>
    <SolidColorBrush x:Key="Paramerus.HeaderSplitter" Color="#FFAEAEAE"/>
    <SolidColorBrush x:Key="Paramerus.HeaderButtonBorder" Color="#FF6B7288"/>
    <SolidColorBrush x:Key="Paramerus.HeaderBackground" Color="#FFFEFEFE"/>
    <SolidColorBrush x:Key="Paramerus.HoverBackground" Color="#FFEEBCBC"/>

    <SolidColorBrush x:Key="Paramerus.RegisterBitFaultColor" Color="#FFFE0000"/>
    <SolidColorBrush x:Key="Paramerus.RegisterBitWarningColor" Color="#FFFEA400"/>
    
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <!--#endregion-->

    <!--#region Converters -->
    <components:RegisterStatusTableConverter x:Key="RegStatusTableConverter"/>
    <components:StatusControlLineToStateIndicButtonConverter x:Key="StatusControlLineConv"/>
    <components:StatusRegsToIndicatorButtonBacgroundConverter x:Key="StatRegToIndBackgroundConv"/>
    <components:ReadValueToVisibleConverter x:Key="ReadValToVisibleConv"/>
    <components:RowCountPanelChartsConverter x:Key="RowCountPanelChartConv"/>
    <components:ColumnCountPanelChartsConverter x:Key="ColCountPanelChartConv"/>
    <components:SizePlotsConverter x:Key="SizePlotsConv"/>
    <components:HeightPlotsConverter x:Key="HeightChartConv"/>
    <components:StatusRegisterToBackgroundConverter x:Key="SRToTitleBackgroundConverter"/>
    <components:StatusRegisterToForegroundConverter x:Key="SRToTitleForegroundConverter"/>
    <components:VisibilityToCheckedConverter x:Key="VisibilityToCheckedConverter"/>
    <components:AlignmentPlotsConverter x:Key="AlignPlotsConv"/>
    <components:LimitItemSourceConverter x:Key="LimitItemsConv"/>
    <!--#endregion-->

    <CornerRadius x:Key="Paramerus.CornerRadius" TopLeft="7" TopRight="7" BottomLeft="7" BottomRight="7"/>
    <!--#endregion-->

    <Style x:Key="RegisterGridRowBackgroundStyle" TargetType="DataGridRow">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=CurrentStatusBit}" Value="Fault">
                <Setter Property="Background" Value="{StaticResource Paramerus.RegisterBitFaultColor}"/>
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=CurrentStatusBit}" Value="Warning">
                <Setter Property="Background" Value="{StaticResource Paramerus.RegisterBitWarningColor}"/>
                <Setter Property="Foreground" Value="Black"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=CurrentStatusBit}" Value="BitNotImplemented">
                <Setter Property="Background" Value="{StaticResource Button.Disabled.Background}"/>
                <Setter Property="Foreground" Value="{StaticResource Button.Disabled.Foreground}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ParamerusRegisterStatusGroupBoxStylle" TargetType="dxlc:GroupBox">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="MinimizeElementVisibility" Value="Visible"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="State" Value="Minimized"/>
    </Style>

    <Style x:Key="ParamerusRegisterStatusDataGridStyle" TargetType="DataGrid">
        <Setter Property="HeadersVisibility" Value="None"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="BorderBrush" Value="{StaticResource Paramerus.HeaderSplitter}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="RowStyle" Value="{StaticResource RegisterGridRowBackgroundStyle}"/>
    </Style>

    <Style x:Key="ParamerusTopItemStyle" TargetType="MenuItem">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Margin" Value="0,1,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="templateRoot" 
                            BorderBrush="Transparent" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid x:Name="Grid" 
                              VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon" 
                                              Content="{TemplateBinding Icon}" 
                                              ContentSource="Icon" 
                                              HorizontalAlignment="Center" 
                                              Height="16" 
                                              Margin="3" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="Center" 
                                              Width="16"/>
                            <Path x:Name="GlyphPanel" 
                                  Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" 
                                  Fill="{TemplateBinding Foreground}" 
                                  FlowDirection="LeftToRight" 
                                  Margin="3" 
                                  Visibility="Collapsed" 
                                  VerticalAlignment="Center"/>
                            <ContentPresenter x:Name="ContentPresenter" 
                                              ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                              Content="{TemplateBinding Header}" 
                                              Grid.Column="1" 
                                              ContentStringFormat="{TemplateBinding HeaderStringFormat}" 
                                              ContentSource="Header" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Popup x:Name="PART_Popup" 
                                   AllowsTransparency="True" 
                                   Focusable="False" 
                                   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
                                   Placement="Bottom">
                                <Border x:Name="SubMenuBorder" 
                                        BorderBrush="#FF999999" 
                                        BorderThickness="1" 
                                        Background="{StaticResource Paramerus.HeaderBackground}" 
                                        Padding="2">
                                    <ScrollViewer x:Name="SubMenuScrollViewer" 
                                                  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid x:Name="Grid1" 
                                              RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="Canvas" 
                                                    HorizontalAlignment="Left" 
                                                    Height="0" 
                                                    VerticalAlignment="Top" 
                                                    Width="0">
                                                <Rectangle x:Name="OpaqueRect" 
                                                           Fill="{Binding Background, ElementName=SubMenuBorder}" 
                                                           Height="{Binding ActualHeight, ElementName=SubMenuBorder}" 
                                                           Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                            </Canvas>
                                            <Rectangle x:Name="Rectangle" 
                                                       Fill="#FFD7D7D7" 
                                                       HorizontalAlignment="Left" 
                                                       Margin="29,2,0,2" 
                                                       Width="1"/>
                                            <ItemsPresenter x:Name="ItemsPresenter" 
                                                            KeyboardNavigation.DirectionalNavigation="Cycle" 
                                                            Grid.IsSharedSizeScope="True" 
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                            KeyboardNavigation.TabNavigation="Cycle"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource Paramerus.HoverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                            <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                        </Trigger>
                        <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    
    <Style x:Key="NavigListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Width" Value="100"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ParamerusChartPanelCustomStyle" TargetType="local:ParamerusChartPanel">
        <Setter Property="Margin" Value="10,0,5,7"/>
    </Style>

    <Style x:Key="ParamerusBorderStyle" TargetType="Border">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource Paramerus.HeaderBackground}"/>
        <Setter Property="CornerRadius" Value="{StaticResource Paramerus.CornerRadius}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Paramerus.HeaderSplitter}"/>
    </Style>

    <Style x:Key="BorderCloseButtonTrigger" TargetType="Border">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="CornerRadius" Value="3,3,3,3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.Triggers>
            <Trigger Property="Border.IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Paramerus.HoverBackground}"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                         Value="True">
                <Setter Property="Background" Value="{StaticResource Paramerus.MainColor}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ParamerusChartPanelCloseButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="ButtonCloseBorder" 
                            Style="{StaticResource BorderCloseButtonTrigger}">
                        <Grid>
                            <Line X1="3" Y1="3" X2="9" Y2="9" Stroke="Black" StrokeThickness="2"/>
                            <Line X1="9" Y1="3" X2="3" Y2="9" Stroke="Black" StrokeThickness="2"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>

 
</ResourceDictionary>